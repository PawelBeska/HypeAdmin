$(document).on({
    ajaxStart: function (e) {
        NProgress.start();
        $('div#loader').show();
    },

    ajaxStop: function () {
        $('div#loader').hide();
        NProgress.done();

    }
});

function errors(data, selector) {
    selector.empty();
    selector.show();
    const error = ({alert, message}) => `<div class="alert alert-sm alert-border-left ${alert} alert-dismissable text-center">
                                               <button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>
                                               <i class="fa fa-info pr10" style="margin-right: 6px"></i> ${message} </div>`;
    if (data['error'])
        selector.prepend(error({'alert': 'alert-danger', 'message': data['error']}));
    else if (data['success'])
        selector.prepend(error({'alert': 'alert-success', 'message': data['success']}));
    else {
        var l = JSON.parse(data.responseText);
        var i = 0;
        $.each(l['errors'], function (heading, text) {
            i++;
            selector.prepend(error({'alert': 'alert-danger', 'message': text}));
        });
    }
}

function init() {

    var e = document.getElementsByClassName("needs-validation");
    Array.prototype.filter.call(e, function (e) {
        e.addEventListener("submit", function (o) {
            !1 === e.checkValidity() && (o.preventDefault(), o.stopPropagation()), e.classList.add("was-validated")
        }, !1)
    })
    let formUpdate = $("form.update");
    formUpdate.submit(function (e) {
        e.preventDefault();
        $.ajax({
            url: formUpdate.attr('action'),
            type: 'PUT',
            global: false,
            cache: false,
            data: formUpdate.serialize(),
            success: function (data) {
                errors(data, $('#form-errors'));
                window.datatable.ajax.reload();
                $("form.update select option").each(function ($ez) {
                    console.log($(this).text());
                    $(this).removeAttr('selected')
                });
            },
            error: function (data) {
                errors(data, $('#form-errors'));
            }
        });
    });
    let formLogin = $("form.login");
    formLogin.submit(function (e) {

        $.ajax({
            url: formLogin.attr('action'),
            type: 'POST',
            global: false,
            cache: false,
            data: formLogin.serialize(),
            success: function (data) {
                errors(data, $('#form-errors'));
               location.reload();
            },
            error: function (data) {
                errors(data, $('#form-errors'));
            }
        });
    });
    let registerForm = $("form.register");
    registerForm.submit(function (e) {
        e.preventDefault();
        $.ajax({
            url: registerForm.attr('action'),
            type: 'POST',
            global: false,
            cache: false,
            data: registerForm.serialize(),
            success: function (data) {
                errors(data, $('#form-errors'));
            },
            error: function (data) {
                errors(data, $('#form-errors'));
            }
        });
    });
    let formCreate = $("form.create");
    formCreate.submit(function (e) {
        e.preventDefault();
        $.ajax({
            url: formCreate.attr('action'),
            type: 'GET',
            global: false,
            cache: false,
            data: formCreate.serialize(),
            success: function (data) {
                errors(data, $('#form-errors'));
                window.datatable.ajax.reload();
            },
            error: function (data) {
                errors(data, $('#form-errors'));
            }
        });
    });
    $('.table').on('click', 'button.remove', function () {
        $.ajax({
            url: loc + $(this).parents('tr').attr('id'),
            type: 'DELETE',
            success: function (data) {
                errors(data, $('#form-errors'));
                window.datatable.ajax.reload();
            },
            error: function (data) {
                errors(data, $('#form-errors'));
            }
        });
    });
    var loc = $('form.update').attr('action') ? $('form.update').attr('action') + '/' : location.href + '/';
    $('.table').on('click', 'button.update', function () {
        $('div.update').show();
        $('form.update').attr({
            'id': $(this).parents('tr').attr('id'),
            'action': loc + $(this).parents('tr').attr('id')
        });
        var tr = $(this).parents('tr');
        $('form.update').find(':input.form-control').each(function (e) {
            let text = tr.find("td." + $(this).attr('id').replace('[]', '')).text();
            if (text.length) {
                if ($(this)[0].nodeName == 'INPUT') {
                    $(this).val(text);
                } else if (text.indexOf('[') > -1) {
                    $('form.update .select2[name="genrs[]"').val(JSON.parse(text)).trigger('change');
                } else if (text.indexOf(',') > -1) {
                    text.split(',').forEach(function ($e) {
                        $("form.update select option:contains('" + $e + "')").each(function () {
                            if ($(this).text() == $e) {
                                $(this).attr('selected', 'selected');
                            }
                        });
                    });
                } else {
                    $("form.update select option:contains('" + text + "')").each(function () {
                        if ($(this).text() == text) {
                            $(this).attr('selected', 'selected');
                        }
                    });
                }
            }
        });

    });
}

$(document).ready(function () {
    "use strict";
    RefreshMenu();
    var e, o = function (e) {
        var o = new MouseEvent("click", {bubbles: !0, cancelable: !0, view: window});
        e.dispatchEvent(o)
    }, n = (e = 0, function (o, n) {
        clearTimeout(e), e = setTimeout(o, n)
    });
    $('li > a').on('click', function (e) {
        let url = $(this).attr('href');
        if ($(this).attr('redirect')) {
            e.preventDefault();
            $.ajax({
                url: url,
                type: 'GET',
                data: null,
                cache: false,
                success: function (data) {
                    $('div.lime-container').html(data);
                    console.log(url)
                    ChangeUrl('Users', url);
                    RefreshMenu();
                    init();
                }
            });
        }
    });

    function ChangeUrl(page, url) {
        if (typeof (history.pushState) != "undefined") {
            var obj = {Page: page, Url: url};
            history.pushState(obj, obj.Page, obj.Url);
        } else {
            window.location.href = "homePage";
            // alert("Browser does not support HTML5.");
        }
    }

    function RefreshMenu() {
        $('li > a.active').removeClass('active');
        $('li > a').each(function () {
            if ($(this).attr('href') == window.location.href) $(this).addClass('active');
        });
    }


    !function () {
        1 === $(".material-design-hamburger__icon").length && document.querySelector(".material-design-hamburger__icon").addEventListener("click", function () {
            var e;
            document.body.classList.toggle("background--blur"), this.parentNode.nextElementSibling.classList.toggle("menu--on"), (e = this.childNodes[1].classList).contains("material-design-hamburger__icon--to-arrow") ? (e.remove("material-design-hamburger__icon--to-arrow"), e.add("material-design-hamburger__icon--from-arrow")) : (e.remove("material-design-hamburger__icon--from-arrow"), e.add("material-design-hamburger__icon--to-arrow"))
        }), $(window).click(function () {
            if ($("body").hasClass("sidebar-show")) {
                var e = document.querySelector(".navigation-toggle a");
                o(e)
            }
        }), $(".lime-sidebar").click(function (e) {
            e.stopPropagation()
        }), $(".navigation-toggle a").on("click", function () {
            return $("body").toggleClass("sidebar-show"), !1
        });
        var e = $(".accordion-menu li:not(.open) .sub-menu"), n = $(".accordion-menu li.active-page > a");
        e.hide(), $(".accordion-menu li a").on("click", function () {
            var e = $(this).next(".sub-menu"), o = $(this).parent("li"), n = $(".accordion-menu > li.open");
            if (e.length) return o.hasClass("open") ? ($(".open .sub-menu li").each(function (e) {
                var o = $(this);
                setTimeout(function () {
                    o.removeClass("animation")
                }, 15 * (e + 1))
            }), e.slideUp(200), o.removeClass("open")) : (n.length && ($(".accordion-menu > li.open > .sub-menu").slideUp(200), n.removeClass("open")), e.slideDown(200), o.addClass("open"), $(".open .sub-menu li").each(function (e) {
                var o = $(this);
                setTimeout(function () {
                    o.addClass("animation")
                }, 25 * (e + 1))
            })), !1
        }), $(".active-page > .sub-menu").length && n.click()
    }(), $("body").hasClass("header-fixed") && ($(window).scroll(function () {
        $(this).scrollTop() > 20 ? $(".lime-header").addClass("scroll-header") : $(".lime-header").removeClass("scroll-header")
    }), $(window).on("load", function () {
        $(this).scrollTop() > 0 ? $(".lime-header").addClass("scroll-header") : $(".lime-header").removeClass("scroll-header")
    })), $(window).click(function () {
        if ($("body").hasClass("show-theme-settings")) {
            var e = document.querySelector(".theme-settings-link");
            o(e)
        }
    }), $(".theme-settings-sidebar").click(function (e) {
        e.stopPropagation()
    }), $(".theme-settings-link").on("click", function () {
        return $("body").toggleClass("show-theme-settings"), !1
    }), $("#search input").on("input", function () {
        var e = $(this).val();
        e.length > 0 ? ($("body").addClass("searching"), $("span.search-input-value").html(e)) : $("body").removeClass("searching"), $(".search-results .search-result-list").fadeOut(1), n(function () {
            0 != !$.trim($("#search input").val()).length ? $(".search-results .search-result-list").fadeOut(1) : $(".search-results .search-result-list").fadeIn()
        }, 500)
    }), $(document).keyup(function (e) {
        $("body").hasClass("searching") && 27 === e.keyCode && $("body").removeClass("searching")
    }), $(document).mouseup(function (e) {
        var o = $(".search-results"), n = $("#search input");
        o.is(e.target) || n.is(e.target) || 0 !== o.has(e.target).length || 0 !== n.has(e.target).length || $("body").removeClass("searching")
    }), $("#closeSearch").on("click", function () {
        $("body").removeClass("searching")
    }), function () {
        $(".slimscroll").slimScroll({wheelStep: 5}), $('[data-toggle="popover"]').popover(), $('[data-toggle="tooltip"]').tooltip();
        !function () {
            if ($(".image-crop").length) {
                var e = $(".image-crop > img");
                e.cropper({preview: ".img-preview"}), $("#zoomIn").on("click", function () {
                    e.cropper("zoom", .1)
                }), $("#zoomOut").on("click", function () {
                    e.cropper("zoom", -.1)
                }), $("#rotateLeft").on("click", function () {
                    e.cropper("rotate", 45)
                }), $("#rotateRight").on("click", function () {
                    e.cropper("rotate", -45)
                }), $("#clear").on("click", function () {
                    e.cropper("clear")
                });
                var o = $("#replaceWith");
                $("#replace").click(function () {
                    e.cropper("replace", o.val())
                })
            }
        }(), window.addEventListener("load", function () {
            var e = document.getElementsByClassName("needs-validation");
            Array.prototype.filter.call(e, function (e) {
                e.addEventListener("submit", function (o) {
                    !1 === e.checkValidity() && (o.preventDefault(), o.stopPropagation()), e.classList.add("was-validated")
                }, !1)
            })
        }, !1)
    }()
}), $(window).on("load", function () {
    setTimeout(function () {
        $("body").addClass("no-loader")
    }, 1e3)
});
